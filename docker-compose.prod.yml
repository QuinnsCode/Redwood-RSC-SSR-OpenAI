version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: api_serve
    ports:
      - "8911:8911"
    depends_on:
      - db
    environment:
      - DATABASE_URL=file://data/sqlite.db
      - TEST_DATABASE_URL=file://data/sqlite.db
      - SESSION_SECRET=9Svo/qMeEr/xn69l/SLD2mtB0z737dWpjRnMm9r/NQY=

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: web_serve
    ports:
      - "8910:8910"
    depends_on:
      - api
    environment:
      - API_PROXY_TARGET=http://api:8911

  # db:
  #   image: postgres:16-bookworm
  #   environment:
  #     POSTGRES_USER: redwood
  #     POSTGRES_PASSWORD: redwood
  #     POSTGRES_DB: redwood
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./postgres:/var/lib/postgresql/data

  # After starting with `docker compose -f ./docker-compose.prod.yml up`,
  # use the console to run commands in the container:
  #
  # ```
  # docker compose -f ./docker-compose.prod.yml run --rm -it console /bin/bash
  # ```
  console:
    user: root
    build:
      context: .
      dockerfile: ./Dockerfile
      target: console
    tmpfs:
      - /tmp
    command: "true"
    environment:
      - DATABASE_URL=file://data/sqlite.db
      - TEST_DATABASE_URL=file://data/sqlite.db
    depends_on:
      - db
